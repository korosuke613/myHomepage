version: 2.1
executors:
  default:
    working_directory: ~/workspace
    docker:
      - image: cimg/node:16.14.2
  vrt:
    working_directory: ~/workspace
    docker:
      - image: mcr.microsoft.com/playwright:focal
    environment:
      NODE_ENV: development # Needed if playwright is in `devDependencies`

jobs:
  build:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Get Hatena
          command: node .circleci/generate_hatena.js
      - run:
          name: Build
          command: yarn generate
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  lint:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Lint
          command: yarn lint
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  visual-regression-testing:
    executor: vrt
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: "[expected] Setup main branch"
          command: |
            mkdir tmp
            cd tmp
            git clone --depth=1 https://github.com/korosuke613/myHomepage
            yarn install --frozen-lockfile
      - run:
          name: "[expected] Run dev server on main"
          background: true
          command: |
            cd tmp
            NUXT_PORT=8080 yarn dev
      - run:
          name: "[actual] Install dependencies"
          command: yarn install --frozen-lockfile
      - run:
          name: "[actual] Run dev server on pr"
          background: true
          command: |
            NUXT_PORT=8081 yarn dev
      - run:
          name: Wait launch dev server
          command: sleep 20
      - run:
          name: "[expected] VRT - main"
          command: NUXT_PORT=8080 yarn vrt:update
      - run:
          name: "[actual] VRT - pr"
          command: NUXT_PORT=8081 yarn vrt
      - store_artifacts:
          path: tests/snapshots.spec.ts-snapshots
          destination: expected-snapshots
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: test-results/results.xml
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  deploy:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Get Hatena
          command: node .circleci/generate_hatena.js
      - run:
          name: Build
          command: yarn generate
      - run:
          name: Add ads.txt
          command: echo "google.com, pub-7246355771451460, DIRECT, f08c47fec0942fa0" > dist/ads.txt
      - run: git config user.email "korosuke613+circleci@users.noreply.github.com"
      - run: git config user.name "korosuke613+circleci"
      - add_ssh_keys:
          fingerprints:
            - "ae:8d:b2:b2:4f:ec:bd:7c:d8:23:23:90:8c:fd:b2:5b"
      - run:
          name: Deploy
          command: yarn deploy
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/


workflows:
  build_and_test:
    jobs:
      - build
      - lint
      - visual-regression-testing:
          filters:
            branches:
              ignore: main

  cron:
    triggers:
      - schedule:
          cron: "0 23 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - deploy

  publish:
    jobs:
      - deploy:
          filters:
            branches:
              only: main
