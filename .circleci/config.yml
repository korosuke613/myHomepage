version: 2.1
executors:
  default:
    working_directory: ~/workspace
    docker:
      - image: cimg/node:20.3.0
  vrt:
    working_directory: ~/workspace
    docker:
      - image: mcr.microsoft.com/playwright:focal
    environment:
      NODE_ENV: development # Needed if playwright is in `devDependencies`

jobs:
  build:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Get Hatena
          command: node .circleci/generate_hatena.js
      - run:
          name: Build
          command: yarn generate
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  lint:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Lint
          command: yarn lint
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  vrt-init:
    executor: vrt
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          key: projectname-main-{{ checksum "yarn.lock" }}
      - run:
          name: Switch main
          command: git switch main
      - run:
          name: "Install dependencies"
          command: |
            yarn install --frozen-lockfile
            yarn playwright install
      - run:
          name: "Run dev server"
          background: true
          command: yarn dev
      - run:
          name: "Wait launch dev server"
          command: sleep 20
      - run:
          name: "VRT init"
          command: yarn vrt:update
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - tests/snapshots.spec.ts-snapshots
      - save_cache:
          key: projectname-main-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  vrt-check:
    executor: vrt
    resource_class: medium+
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: "Install dependencies"
          command: |
            yarn install --frozen-lockfile
            yarn playwright install
      - run:
          name: "Run dev server"
          background: true
          command: yarn dev
      - run:
          name: "Wait launch dev server"
          command: sleep 20
      - run:
          name: "VRT check"
          command: yarn vrt
      - store_artifacts:
          path: tests/snapshots.spec.ts-snapshots
          destination: expected-snapshots
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: test-results/results.xml
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/

  deploy:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Get Hatena
          command: node .circleci/generate_hatena.js
      - run:
          name: Build
          command: yarn generate
      - run:
          name: Add ads.txt
          command: echo "google.com, pub-7246355771451460, DIRECT, f08c47fec0942fa0" > dist/ads.txt
      - run: git config user.email "korosuke613+circleci@users.noreply.github.com"
      - run: git config user.name "korosuke613+circleci"
      - add_ssh_keys:
          fingerprints:
            - "ae:8d:b2:b2:4f:ec:bd:7c:d8:23:23:90:8c:fd:b2:5b"
      - run:
          name: Deploy
          command: yarn deploy
      - save_cache:
          key: projectname-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/


workflows:
  build_and_test:
    jobs:
      - build
      - lint


  visual-regression-testing:
    jobs:
      - vrt-init:
          filters:
            branches:
              ignore: main
      - vrt-check:
          requires:
            - vrt-init
          filters:
            branches:
              ignore: main
  cron:
    triggers:
      - schedule:
          cron: "0 23 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - deploy

  publish:
    jobs:
      - deploy:
          filters:
            branches:
              only: main
